name: Pull Request

on:
  workflow_call:
    inputs:
      python-version-unit:
        required: true
        description: "Python version"
        type: string
        default: "['3.8', '3.10']"
      python-version-func:
        required: true
        description: "Python version"
        type: string
        default: "3.10"
      tox-version:
        required: false
        description: "Tox version, which should be used, e.g. `<4`"
        type: string
        default: ""
      working-directory:
        required: false
        description: "To change working directory"
        type: string
        default: "."
      snapcraft:
        required: false
        description: "Flag if snap is tested."
        type: boolean
        default: false
      timeout-minutes:
        required: false
        description: "Configurable timeout limit for functional test job"
        type: number
        default: 60
      commands:
        required: true
        description: |
          Command to run functional test in strategies. It accepts a stringified list
          of commands, which allows you to run multiple tests with different parameters.
          This is a required input field.
          Examples:
          - "['make functional']"
          - "['FUNC_ARGS="--series jammy" make functional',
             'FUNC_ARGS="--series focal" make functional']"
          - "['tox -e func -- -sv --series jammy', 'tox -e func -- -sv --series focal']"
        type: string
      # actions-operator
      provider:
        required: false
        type: string
        default: "lxd"
      nested-containers:
        required: false
        type: boolean
        default: false
      ignore-changes:
        required: false
        type: string
        description: |
          Directories to ignore when checking changes. This is an optional input
          field and it accepts a stringified list of directory pathes separated
          by "|". The pathes should be relative to the repo's root directory.
          Examples:
          - "doc/|tests/unit/"
        default: "^$"

jobs:
  check-skip:
    name: Check if any tests meet the requirements for skipping
    if: |
      contains(fromJson('["main", "master", "test"]'), github.event.ref_name)
      || github.event_name == 'pull_request'
      || github.event.review.state == 'approved'
      || github.event.review.body == 'recheck'
    runs-on: ubuntu-latest
    steps:
      - name: Check whether to skip lint and unit tests
        id: check-lint-unit-skip
        if: github.event.review.body != 'recheck'
        uses: agileshaw/bootstack-actions/.github/actions/check-skip@action_tests
        with:
          ignore-changes: ${{ inputs.ignore-changes }}

  lint-unit:
    name: Lint checkers and unit tests
    needs:
    - check-skip
    # Note(rgildein, txiao): Lint checkers and unit tests should be triggered on
    # any pull requested, approval pull request, or review comment with recheck.
    if: |
      contains(fromJson('["main", "master", "test"]'), github.event.ref_name)
      || github.event_name == 'pull_request'
      || github.event.review.state == 'approved'
      || github.event.review.body == 'recheck'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ${{ fromJson(inputs.python-version-unit) }}
    steps:
    - name: Running lint check and unit tests for the source repo
      if: |
        github.event.review.body == 'recheck'
        || needs.check-skip.outputs.skip-lint-unit-tests == 0
      uses: agileshaw/bootstack-actions/.github/actions/lint-unit-test@action_tests
      with:
        python-version: ${{ matrix.python-version }}
        tox-version: ${{ inputs.tox-version }}
        working-directory: ${{ inputs.working-directory }}

  func:
    name: Functional tests
    needs:
    - lint-unit
    # Note(rgildein, txiao): Functional tests should be triggered for commits to
    # master/main branch, any pull requested, approval pull request, or review
    # comment with recheck.
    if: |
      contains(fromJson('["main", "master", "test"]'), github.event.ref_name) ||
      github.event_name == 'pull_request' ||
      github.event.review.state == 'approved' ||
      github.event.review.body == 'recheck'
    runs-on: ubuntu-latest
    timeout-minutes: ${{ inputs.timeout-minutes }}
    strategy:
      fail-fast: true
      matrix:
        command: ${{ fromJson(inputs.commands) }}
    steps:
    - name: Running functional tests for the source repo
      if: |
        github.event.review.body == 'recheck'
        || needs.check-skip.outputs.skip-func-tests == 0
      uses: agileshaw/bootstack-actions/.github/actions/func-test@action_tests
      with:
        python-version: ${{ inputs.python-version-func }}
        tox-version: ${{ inputs.tox-version }}
        working-directory: ${{ inputs.working-directory }}
        snapcraft: ${{ inputs.snapcraft }}
        command: ${{ matrix.command }}
        provider: ${{ inputs.provider }}
        nested-containers: ${{ inputs.nested-containers }}
